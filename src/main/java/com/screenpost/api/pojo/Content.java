package com.screenpost.api.pojo;
// Generated 1 Jul, 2020 2:00:06 PM by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;
import java.time.Instant;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Content generated by hbm2java
 */
@Entity
@Table(name = "content")
public class Content implements java.io.Serializable {

	private Integer contentId;
	private OauthUserDet oauthUserDet;
	private String title;
	private String folder;
	private String type;
	private String url;
	private Time duration;
	private String info;
	private Timestamp createdAt;
	private Set<ContainerContent> containerContentsForContainerId = new HashSet(0);
	private Set<ContainerContent> containerContentsForContentId = new HashSet(0);

	public Content() {
	}

	public Content(String title, Time duration) {
		this.title = title;
		this.duration = duration;
	}

	public Content(OauthUserDet oauthUserDet, String title, String folder, String type, String url, Time duration,
			String info, Set<ContainerContent> containerContentsForContainerId, Set<ContainerContent> containerContentsForContentId) {
		this.oauthUserDet = oauthUserDet;
		this.title = title;
		this.folder = folder;
		this.type = type;
		this.url = url;
		this.duration = duration;
		this.info = info;
		this.containerContentsForContainerId = containerContentsForContainerId;
		this.containerContentsForContentId = containerContentsForContentId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "content_id", unique = true, nullable = false)
	public Integer getContentId() {
		return this.contentId;
	}

	public void setContentId(Integer contentId) {
		this.contentId = contentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id")
	public OauthUserDet getOauthUserDet() {
		return this.oauthUserDet;
	}

	public void setOauthUserDet(OauthUserDet oauthUserDet) {
		this.oauthUserDet = oauthUserDet;
	}

	@Column(name = "title", nullable = false)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "folder")
	public String getFolder() {
		return this.folder;
	}

	public void setFolder(String folder) {
		this.folder = folder;
	}

	@Column(name = "type")
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "url")
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

//	@Temporal(TemporalType.TIME)
	@Column(name = "duration", nullable = false, length = 8)
	public Time getDuration() {
		return this.duration;
	}

	public void setDuration(Time duration) {
		this.duration = duration;
	}

	@Column(name = "info", length = 1073741824)
	public String getInfo() {
		return this.info;
	}

	public void setInfo(String info) {
		this.info = info;
	}

//	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 8)
	public Timestamp getCreatedAt() {
		return createdAt;
	}

	public void setCreatedAt(Timestamp createdAt) {
		this.createdAt = createdAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contentByContainerId")
	public Set<ContainerContent> getContainerContentsForContainerId() {
		return this.containerContentsForContainerId;
	}

	public void setContainerContentsForContainerId(Set<ContainerContent> containerContentsForContainerId) {
		this.containerContentsForContainerId = containerContentsForContainerId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contentByContentId")
	public Set<ContainerContent> getContainerContentsForContentId() {
		return this.containerContentsForContentId;
	}

	public void setContainerContentsForContentId(Set<ContainerContent> containerContentsForContentId) {
		this.containerContentsForContentId = containerContentsForContentId;
	}

}
