package com.screenpost.api.pojo;
// Generated 1 Jul, 2020 2:00:06 PM by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.sql.Date;
import java.time.Instant;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * OauthUserDet generated by hbm2java
 */
@Entity
@Table(name = "oauth_user_det")
public class OauthUserDet implements java.io.Serializable {

	private Integer userId;
	private String username;
	private String password;
	private String role;
	private Integer active;
	private String provider;
	private Date createdAt;
	private Date lastModifiedAt;
	private UserProfile userProfile;
	private Set<Screen> screens = new HashSet(0);
	private Set<Content> contents = new HashSet(0);

	public OauthUserDet() {
	}

	public OauthUserDet(Date createdAt, Date lastModifiedAt) {
		this.createdAt = createdAt;
		this.lastModifiedAt = lastModifiedAt;
	}

	public OauthUserDet(String username, String password, String role, Integer active, String provider, Date createdAt,
			Date lastModifiedAt, UserProfile userProfile, Set<Screen> screens, Set<Content> contents) {
		this.username = username;
		this.password = password;
		this.role = role;
		this.active = active;
		this.provider = provider;
		this.createdAt = createdAt;
		this.lastModifiedAt = lastModifiedAt;
		this.userProfile = userProfile;
		this.screens = screens;
		this.contents = contents;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "user_id", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "username")
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@JsonIgnore
	@Column(name = "password")
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "role", length = 12)
	public String getRole() {
		return this.role;
	}

	public void setRole(String role) {
		this.role = role;
	}

	@Column(name = "active")
	public Integer getActive() {
		return this.active;
	}

	public void setActive(Integer active) {
		this.active = active;
	}

	@Column(name = "provider")
	public String getProvider() {
		return this.provider;
	}

	public void setProvider(String provider) {
		this.provider = provider;
	}

//	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

//	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_modified_at", nullable = false, length = 19)
	public Date getLastModifiedAt() {
		return this.lastModifiedAt;
	}

	public void setLastModifiedAt(Date lastModifiedAt) {
		this.lastModifiedAt = lastModifiedAt;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "oauthUserDet")
	public UserProfile getUserProfile() {
		return this.userProfile;
	}

	public void setUserProfile(UserProfile userProfile) {
		this.userProfile = userProfile;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "oauthUserDets")
	public Set<Screen> getScreens() {
		return this.screens;
	}

	public void setScreens(Set<Screen> screens) {
		this.screens = screens;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "oauthUserDet")
	public Set<Content> getContents() {
		return this.contents;
	}

	public void setContents(Set<Content> contents) {
		this.contents = contents;
	}

}
